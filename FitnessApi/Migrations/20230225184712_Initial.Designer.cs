// <auto-generated />
using System;
using FitnessApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessApi.Migrations
{
    [DbContext(typeof(FitnessDbContext))]
    [Migration("20230225184712_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.14");

            modelBuilder.Entity("FitnessApi.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CaloriesPerMinute")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("FitnessApi.Models.Eating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("MealDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("MealTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Eatings");
                });

            modelBuilder.Entity("FitnessApi.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BurnedCalories")
                        .HasColumnType("decimal(5,1)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("UserId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("FitnessApi.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Calories")
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("Carbohydrates")
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("Fats")
                        .HasColumnType("decimal(4,1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Proteins")
                        .HasColumnType("decimal(4,1)");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("FitnessApi.Models.FoodEating", b =>
                {
                    b.Property<int>("FoodId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EatingId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PortionSize")
                        .HasColumnType("decimal(4,1)");

                    b.HasKey("FoodId", "EatingId");

                    b.HasIndex("EatingId");

                    b.ToTable("FoodEating", (string)null);
                });

            modelBuilder.Entity("FitnessApi.Models.Gender", b =>
                {
                    b.Property<char>("Name")
                        .HasColumnType("char(1)");

                    b.HasKey("Name");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("FitnessApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<char>("GenderName")
                        .HasColumnType("char(1)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(4,1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(4,1)");

                    b.HasKey("Id");

                    b.HasIndex("GenderName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitnessApi.Models.Vitamin", b =>
                {
                    b.Property<int>("FoodId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Calcium")
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("Iron")
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("Magnesium")
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("VitaminB12")
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("VitaminB6")
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("VitaminC")
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("VitaminD")
                        .HasColumnType("decimal(4,1)");

                    b.HasKey("FoodId");

                    b.ToTable("Vitamins");
                });

            modelBuilder.Entity("FitnessApi.Models.Eating", b =>
                {
                    b.HasOne("FitnessApi.Models.User", "User")
                        .WithMany("Eatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApi.Models.Exercise", b =>
                {
                    b.HasOne("FitnessApi.Models.Activity", "Activity")
                        .WithMany("Exercises")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessApi.Models.User", "User")
                        .WithMany("Exercises")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApi.Models.FoodEating", b =>
                {
                    b.HasOne("FitnessApi.Models.Eating", "Eating")
                        .WithMany("FoodEatings")
                        .HasForeignKey("EatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessApi.Models.Food", "Food")
                        .WithMany("FoodEatings")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eating");

                    b.Navigation("Food");
                });

            modelBuilder.Entity("FitnessApi.Models.User", b =>
                {
                    b.HasOne("FitnessApi.Models.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("FitnessApi.Models.Vitamin", b =>
                {
                    b.HasOne("FitnessApi.Models.Food", "Food")
                        .WithOne("Vitamin")
                        .HasForeignKey("FitnessApi.Models.Vitamin", "FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");
                });

            modelBuilder.Entity("FitnessApi.Models.Activity", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("FitnessApi.Models.Eating", b =>
                {
                    b.Navigation("FoodEatings");
                });

            modelBuilder.Entity("FitnessApi.Models.Food", b =>
                {
                    b.Navigation("FoodEatings");

                    b.Navigation("Vitamin");
                });

            modelBuilder.Entity("FitnessApi.Models.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FitnessApi.Models.User", b =>
                {
                    b.Navigation("Eatings");

                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
